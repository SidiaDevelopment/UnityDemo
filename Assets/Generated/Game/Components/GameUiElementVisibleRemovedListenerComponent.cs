//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public UiElementVisibleRemovedListenerComponent uiElementVisibleRemovedListener { get { return (UiElementVisibleRemovedListenerComponent)GetComponent(GameComponentsLookup.UiElementVisibleRemovedListener); } }
    public bool hasUiElementVisibleRemovedListener { get { return HasComponent(GameComponentsLookup.UiElementVisibleRemovedListener); } }

    public void AddUiElementVisibleRemovedListener(System.Collections.Generic.List<IUiElementVisibleRemovedListener> newValue) {
        var index = GameComponentsLookup.UiElementVisibleRemovedListener;
        var component = (UiElementVisibleRemovedListenerComponent)CreateComponent(index, typeof(UiElementVisibleRemovedListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceUiElementVisibleRemovedListener(System.Collections.Generic.List<IUiElementVisibleRemovedListener> newValue) {
        var index = GameComponentsLookup.UiElementVisibleRemovedListener;
        var component = (UiElementVisibleRemovedListenerComponent)CreateComponent(index, typeof(UiElementVisibleRemovedListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveUiElementVisibleRemovedListener() {
        RemoveComponent(GameComponentsLookup.UiElementVisibleRemovedListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherUiElementVisibleRemovedListener;

    public static Entitas.IMatcher<GameEntity> UiElementVisibleRemovedListener {
        get {
            if (_matcherUiElementVisibleRemovedListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.UiElementVisibleRemovedListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherUiElementVisibleRemovedListener = matcher;
            }

            return _matcherUiElementVisibleRemovedListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddUiElementVisibleRemovedListener(IUiElementVisibleRemovedListener value) {
        var listeners = hasUiElementVisibleRemovedListener
            ? uiElementVisibleRemovedListener.value
            : new System.Collections.Generic.List<IUiElementVisibleRemovedListener>();
        listeners.Add(value);
        ReplaceUiElementVisibleRemovedListener(listeners);
    }

    public void RemoveUiElementVisibleRemovedListener(IUiElementVisibleRemovedListener value, bool removeComponentWhenEmpty = true) {
        var listeners = uiElementVisibleRemovedListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveUiElementVisibleRemovedListener();
        } else {
            ReplaceUiElementVisibleRemovedListener(listeners);
        }
    }
}

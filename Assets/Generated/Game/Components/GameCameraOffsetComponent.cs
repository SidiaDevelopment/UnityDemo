//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public CameraOffsetComponent cameraOffset { get { return (CameraOffsetComponent)GetComponent(GameComponentsLookup.CameraOffset); } }
    public bool hasCameraOffset { get { return HasComponent(GameComponentsLookup.CameraOffset); } }

    public void AddCameraOffset(UnityEngine.Vector3 newPosition, float newZoom) {
        var index = GameComponentsLookup.CameraOffset;
        var component = (CameraOffsetComponent)CreateComponent(index, typeof(CameraOffsetComponent));
        component.Position = newPosition;
        component.Zoom = newZoom;
        AddComponent(index, component);
    }

    public void ReplaceCameraOffset(UnityEngine.Vector3 newPosition, float newZoom) {
        var index = GameComponentsLookup.CameraOffset;
        var component = (CameraOffsetComponent)CreateComponent(index, typeof(CameraOffsetComponent));
        component.Position = newPosition;
        component.Zoom = newZoom;
        ReplaceComponent(index, component);
    }

    public void RemoveCameraOffset() {
        RemoveComponent(GameComponentsLookup.CameraOffset);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherCameraOffset;

    public static Entitas.IMatcher<GameEntity> CameraOffset {
        get {
            if (_matcherCameraOffset == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.CameraOffset);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherCameraOffset = matcher;
            }

            return _matcherCameraOffset;
        }
    }
}

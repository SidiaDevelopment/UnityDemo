//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlaceableRotationComponent placeableRotation { get { return (PlaceableRotationComponent)GetComponent(GameComponentsLookup.PlaceableRotation); } }
    public bool hasPlaceableRotation { get { return HasComponent(GameComponentsLookup.PlaceableRotation); } }

    public void AddPlaceableRotation(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.PlaceableRotation;
        var component = (PlaceableRotationComponent)CreateComponent(index, typeof(PlaceableRotationComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlaceableRotation(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.PlaceableRotation;
        var component = (PlaceableRotationComponent)CreateComponent(index, typeof(PlaceableRotationComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlaceableRotation() {
        RemoveComponent(GameComponentsLookup.PlaceableRotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlaceableRotation;

    public static Entitas.IMatcher<GameEntity> PlaceableRotation {
        get {
            if (_matcherPlaceableRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlaceableRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlaceableRotation = matcher;
            }

            return _matcherPlaceableRotation;
        }
    }
}

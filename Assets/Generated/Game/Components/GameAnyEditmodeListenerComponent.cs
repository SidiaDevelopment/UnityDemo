//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyEditmodeListenerComponent anyEditmodeListener { get { return (AnyEditmodeListenerComponent)GetComponent(GameComponentsLookup.AnyEditmodeListener); } }
    public bool hasAnyEditmodeListener { get { return HasComponent(GameComponentsLookup.AnyEditmodeListener); } }

    public void AddAnyEditmodeListener(System.Collections.Generic.List<IAnyEditmodeListener> newValue) {
        var index = GameComponentsLookup.AnyEditmodeListener;
        var component = (AnyEditmodeListenerComponent)CreateComponent(index, typeof(AnyEditmodeListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyEditmodeListener(System.Collections.Generic.List<IAnyEditmodeListener> newValue) {
        var index = GameComponentsLookup.AnyEditmodeListener;
        var component = (AnyEditmodeListenerComponent)CreateComponent(index, typeof(AnyEditmodeListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyEditmodeListener() {
        RemoveComponent(GameComponentsLookup.AnyEditmodeListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyEditmodeListener;

    public static Entitas.IMatcher<GameEntity> AnyEditmodeListener {
        get {
            if (_matcherAnyEditmodeListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyEditmodeListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyEditmodeListener = matcher;
            }

            return _matcherAnyEditmodeListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyEditmodeListener(IAnyEditmodeListener value) {
        var listeners = hasAnyEditmodeListener
            ? anyEditmodeListener.value
            : new System.Collections.Generic.List<IAnyEditmodeListener>();
        listeners.Add(value);
        ReplaceAnyEditmodeListener(listeners);
    }

    public void RemoveAnyEditmodeListener(IAnyEditmodeListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyEditmodeListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyEditmodeListener();
        } else {
            ReplaceAnyEditmodeListener(listeners);
        }
    }
}
